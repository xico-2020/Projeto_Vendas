@model IEnumerable<VendasWebMvc.Models.Seller>         /*  Declaração de objeto model. Tem que corresponder ao objeto passado como argumento do controlador (return View) Neste caso lista de vendedores. */

@{
    ViewData["Title"] = "Vendedor";
}

<h2>@ViewData["Title"])</h2>  

<p>
    <a asp-action="Create" class="btn btn-primary active" >Novo vendedor</a>
</p>  

<table class="table table-striped table-hover"> 
    <thead>  
        <tr class="alert-info"> 
            <th>  
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.BirthDate)
            </th>
            <th class="text-center">
                @Html.DisplayNameFor(model => model.Salary)
            </th>
            <th>

            </th>
        </tr>
    </thead>
    <tbody>
        @foreach(var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td align="right">
                @Html.DisplayFor(modelItem => item.Salary)
            </td>
            <td>
                <a asp-action="Edit" class="btn btn-primary badge" asp-route-id="@item.Id">Editar</a> |
                <a asp-action="Details" class="btn btn-primary badge" asp-route-id="@item.Id">Detalhes</a> |
                <a asp-action="Delete" class="btn btn-primary badge" asp-route-id="@item.Id">Remover</a> 
            </td>
        </tr>
        }
    </tbody>
</table>

